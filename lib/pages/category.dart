import 'dart:collection';
import 'dart:convert';
import 'dart:ui';

import 'package:flutter/material.dart';
import 'package:flutter_sample/bean/category.dart';
import 'package:flutter_sample/http/httputils.dart';
import 'package:flutter_sample/http/networkapi.dart';

class CategoryPage extends StatefulWidget {
  @override
  CategoryPageState createState() => CategoryPageState();
}

class CategoryPageState extends State<CategoryPage>
    with SingleTickerProviderStateMixin {
  var _tabList = ["all", "Android", "iOS", "App", "前端", "拓展资源", "瞎推荐", "休息视频"];
  var _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(
      initialIndex: 0,
      length: _tabList.length,
      vsync: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Center(
            child: Text('分类'),
          ),
          bottom: TabBar(
            isScrollable: true,
            controller: _tabController,
            tabs: _tabList.map((itme) {
              return Tab(text: itme);
            }).toList(),
          ),
        ),
        body: TabBarView(
          controller: _tabController,
          children: _tabList.map((itme) {
            return MyListView(itme);
          }).toList(),
        ));
  }
}

class MyListView extends StatefulWidget {
  MyListView(this.category);

  String category;

  @override
  MyListViewState createState() => MyListViewState();
}

class MyListViewState extends State<MyListView> {
  List<Results> datas = [];
  int _page = 1;
  ScrollController _scrollController;

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    _scrollController = ScrollController();
    _scrollController.addListener(() {
      var pix = _scrollController.position.pixels;
      if(pix==_scrollController.position.maxScrollExtent) {
        print('加载更多888888888');
       setState(() {
         _page++;
       });
       _initData(_page);
      }
    });
    _initData(_page);
  }

  @override
  Widget build(BuildContext context) {
    return RefreshIndicator(
      child: ListView.separated(
        controller: _scrollController,
        separatorBuilder: (context, index) {
          return Container(
            height: 1,
            color: Colors.grey.shade100,
          );
        },
        itemCount: datas.length,
        itemBuilder: (context, index) {
          return CategoryItem(datas[index]);
        },
      ),
      onRefresh: _onRefresh,
    );
  }

  void _initData(int page) async {
    Map params = HashMap();
    params["page"] = page;
    params["size"] = 10;
    params["cate"] = widget.category;
    var respons =
        await HttpUtils.request(NetWorkApi.CATEGORY_LIST, params, 'get');
    var parseJson = json.decode(respons.toString());
    var bean = Autogenerated.fromJson(parseJson);
    var results = bean.results;
    setState(() {
      if (page == 1) {
        datas.clear();
      }
      datas.addAll(results);
    });
  }

  Future<void> _onRefresh() async {
    setState(() {
      _page = 1;
    });
    await _initData(_page);
  }
}

class CategoryItem extends StatefulWidget {
  CategoryItem(this.item);

  Results item;

  @override
  CategoryItemState createState() => CategoryItemState();
}

class CategoryItemState extends State<CategoryItem> {
  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    return ListTile(
      onTap: () {},
      title: Row(
        children: <Widget>[
          Expanded(
            child: Column(
              children: <Widget>[
                Text(
                  '${widget.item.desc}',
                  overflow: TextOverflow.ellipsis,
                  maxLines: 2,
                ),
                Container(
                  height: 10,
                ),
                Row(
                  children: <Widget>[
                    Icon(
                      Icons.person,
                      color: Colors.blue,
                    ),
                    Text('${widget.item.who}'),
                    Icon(
                      Icons.timer,
                      color: Colors.blue,
                    ),
                    Text(
                      '${widget.item.createdAt.substring(0, 10)}',
                    )
                  ],
                ),
              ],
            ),
          ),
          Container(
            width: 10,
          ),
          ClipRRect(
            borderRadius: BorderRadius.circular(4),
            child: Image.network(
              'https://hbimg.huabanimg.com/a9d10755cdf6fef52d529a807810c937dd4c70552bb46-sAwWOc_fw658',
              width: 80,
              height: 80,
            ),
          ),
        ],
      ),
    );
  }
}

import 'dart:collection';
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_sample/bean/categoryBean.dart';
import 'package:flutter_sample/http/httputils.dart';
import 'package:flutter_sample/http/networkapi.dart';
import 'package:flutter_sample/pages/loading.dart';

import 'item/item_category.dart';
class MyListView extends StatefulWidget {
  int totalCount=5;
  bool loadEnd=false;
  MyListView(this.category);
  String category;

  @override
  MyListViewState createState() => MyListViewState();
}

class MyListViewState extends State<MyListView> {
  List<Results> datas = [];
  int _page = 1;
  ScrollController _scrollController;
  int loadState;//加载状态
  @override
  void initState() {
    super.initState();
    _scrollController = ScrollController();
    _scrollController.addListener(() {
      var pix = _scrollController.position.pixels;
      if(pix==_scrollController.position.maxScrollExtent) {
        if(loadState==LoadMore.LOADEND){
          return;
        }
        setState(() {
          _page++;
        });
        _initData(_page);
      }
    });
    _initData(_page);
  }

  @override
  Widget build(BuildContext context) {
    return RefreshIndicator(
      child: ListView.separated(
        controller: _scrollController,
        separatorBuilder: (context, index) {
          return Container(
            height: 1,
            color: Colors.grey.shade100,
          );
        },
        itemCount: datas.length+1,
        itemBuilder: (context, index) {
          if(datas.length==0){
            return null;
          }

          if(index==datas.length){
            return LoadMore(loadState);
          }else{
            return  CategoryItem(datas[index]);
          }

        },
      ),
      onRefresh: _onRefresh,
    );
  }

  void _initData(int page) async {
    Map params = HashMap();
    params["page"] = page;
    params["size"] = 10;
    params["cate"] = widget.category;
    var respons =
    await HttpUtils.request(NetWorkApi.CATEGORY_LIST, params, 'get');
    var parseJson = json.decode(respons.toString());
    var bean = Autogenerated.fromJson(parseJson);
    var results = bean.results;
    setState(() {
      if (page == 1) {
        datas.clear();
      }
      if(_page>=widget.totalCount){
        loadState=LoadMore.LOADEND;
      }else{
        loadState=LoadMore.LOADING;
      }
      datas.addAll(results);
    });
  }

  Future<void> _onRefresh() async {
    setState(() {
      _page = 1;
      loadState=LoadMore.LOADEND;
    });
    await _initData(_page);
  }
}